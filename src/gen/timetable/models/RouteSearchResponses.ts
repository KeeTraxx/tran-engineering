/* tslint:disable */
/* eslint-disable */
/**
 * timetable.search.ch
 * A REST API for public transportation timetables
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Connection } from './Connection';
import {
    ConnectionFromJSON,
    ConnectionFromJSONTyped,
    ConnectionToJSON,
} from './Connection';

/**
 * 
 * @export
 * @interface RouteSearchResponses
 */
export interface RouteSearchResponses {
    /**
     * Number of returned responses
     * @type {number}
     * @memberof RouteSearchResponses
     */
    count: number;
    /**
     * Duration of the shortest trip [s]
     * @type {number}
     * @memberof RouteSearchResponses
     */
    minDuration?: number;
    /**
     * Duration of the longest trip  [s]
     * @type {number}
     * @memberof RouteSearchResponses
     */
    maxDuration?: number;
    /**
     * 
     * @type {Array<Connection>}
     * @memberof RouteSearchResponses
     */
    connections?: Array<Connection>;
}

/**
 * Check if a given object implements the RouteSearchResponses interface.
 */
export function instanceOfRouteSearchResponses(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "count" in value;

    return isInstance;
}

export function RouteSearchResponsesFromJSON(json: any): RouteSearchResponses {
    return RouteSearchResponsesFromJSONTyped(json, false);
}

export function RouteSearchResponsesFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteSearchResponses {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': json['count'],
        'minDuration': !exists(json, 'min_duration') ? undefined : json['min_duration'],
        'maxDuration': !exists(json, 'max_duration') ? undefined : json['max_duration'],
        'connections': !exists(json, 'connections') ? undefined : ((json['connections'] as Array<any>).map(ConnectionFromJSON)),
    };
}

export function RouteSearchResponsesToJSON(value?: RouteSearchResponses | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'min_duration': value.minDuration,
        'max_duration': value.maxDuration,
        'connections': value.connections === undefined ? undefined : ((value.connections as Array<any>).map(ConnectionToJSON)),
    };
}

